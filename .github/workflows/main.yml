# This is a basic workflow to help you get started with Actions

name: build_kernelsu_on_redbull

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1

      # Runs a single command using the runners shell
      - name: Build
        run: |
          cd /home/runner
          echo 'Preparing packages'
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install -y repo git
          echo 'cloning itself'
          git clone https://github.com/CZB666-wdnmd/kernelsu_redbull
          mkdir android-kernel && cd android-kernel
          echo 'pulling kernel source'
          repo init -u https://android.googlesource.com/kernel/manifest -b android-msm-redbull-4.19-android13-qpr1
          repo sync
          cd private/msm-google
          echo 'cloning kernelsu'
          git clone https://github.com/tiann/KernelSU
          echo 'patching files'
          ln -sf "/home/runner/android-kernel/private/msm-google/KernelSU/kernel" "/home/runner/android-kernel/private/msm-google/drivers/kernelsu"
          echo "obj-y += kernelsu/" >> /home/runner/android-kernel/private/msm-google/drivers/Makefile
          cp /home/runner/kernelsu_redbull/ksu.c /home/runner/android-kernel/private/msm-google/KernelSU/kernel/ksu.c
          cp /home/runner/kernelsu_redbull/open.c /home/runner/android-kernel/private/msm-google/fs/open.c
          cp /home/runner/kernelsu_redbull/exec.c /home/runner/android-kernel/private/msm-google/fs/exec.c
          cp /home/runner/kernelsu_redbull/read_write.c /home/runner/android-kernel/private/msm-google/fs/read_write.c
          cp /home/runner/kernelsu_redbull/stat.c /home/runner/android-kernel/private/msm-google/fs/stat.c
          cd /home/runner/android-kernel
          echo 'start building'
          ./build_redbull-gki.sh
          echo 'finished'
      - name: pack boot.img
        run: |
          echo 'prepare to pack boot.img'
          mkdir /home/runner/pack
          cp /home/runner/android-kernel/out/android-msm-pixel-4.19/dist/Image.lz4-dtb /home/runner/pack/kernel
          cp /home/runner/kernelsu_redbull/ramdisk.cpio /home/runner/pack/ramdisk.cpio
          cp /home/runner/kernelsu_redbull/boot.img /home/runner/pack/boot.img
          cp /home/runner/kernelsu_redbull/magiskboot /home/runner/pack/magiskboot
          chmod 777 /home/runner/pack/magiskboot
          echo 'packing boot.img'
          cd /home/runner/pack
          ./magiskboot repack -n ./boot.img
          echo 'finished'
          
      - name: Upload boot.img
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: boot_image
          path: "/home/runner/pack/new-boot.img"
